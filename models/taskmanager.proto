
syntax = "proto3";

package models;
option go_package = "nokib/campwiz/models;models";
service Importer {
    rpc ImportFromCommonsCategory(ImportFromCommonsCategoryRequest) returns (ImportResponse);
    rpc ImportFromPreviousRound(ImportFromPreviousRoundRequest) returns (ImportResponse);
    rpc ImportFromCSV(ImportFromCSVRequest) returns (ImportResponse);
}


message ImportFromCommonsCategoryRequest {
    repeated string commons_category = 1;
    string round_id = 2;
    string task_id = 3;
}
message ImportFromPreviousRoundRequest {
    string round_id = 1;
   string task_id = 2;
   
   repeated float scores = 3;
   string source_round_id = 4;
}
message ImportFromCSVRequest {
    string filePath = 1;
    string submissionIdColumn = 2;
    string pageIdColumn = 3;
    string fileNameColumn = 4;
    string round_id = 5;
    string task_id = 6;
}
message ImportResponse {
   string task_id = 1;
    string round_id = 2;
}

service Distributor {
    // DistributeWithRoundRobin distributes the assignments to different juries in a round robin fashion
    rpc DistributeWithRoundRobin(DistributeWithRoundRobinRequest) returns (DistributeWithRoundRobinResponse);
    // Randomize the assignments to different juries so that the distribution is random
    rpc Randomize(DistributeWithRoundRobinRequest) returns (DistributeWithRoundRobinResponse);
}

message DistributeWithRoundRobinRequest {
    string round_id = 1;
   string task_id = 2;
   repeated string jury_usernames = 3;
   repeated string source_jury_usernames = 4;
    repeated string target_jury_usernames = 5;
}
message DistributeWithRoundRobinResponse {
   string task_id = 1;
}

service StatisticsUpdater {
    // UpdateStatistics updates the statistics of a task
    rpc TriggerEvaluationScoreCount(UpdateStatisticsRequest) returns (UpdateStatisticsResponse);
}
message UpdateStatisticsRequest {
    repeated string submission_ids = 1;
}
message UpdateStatisticsResponse {}