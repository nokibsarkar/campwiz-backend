{
    "produces": [
        "application/json"
    ],
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is the API documentation for Campwiz",
        "title": "Campwiz API",
        "contact": {
            "name": "Nokib Sarkar",
            "url": "https://github.com/nokibsarkar",
            "email": "nokibsarkar@gmail.com"
        },
        "license": {
            "name": "GPL-3.0",
            "url": "https://www.gnu.org/licenses/gpl-3.0.html"
        },
        "version": "1"
    },
    "host": "localhost:8080",
    "basePath": "/api/v2",
    "paths": {
        "/campaign/": {
            "get": {
                "description": "get all campaigns",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "List all campaigns",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "ids",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "next",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "prev",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.ResponseList-database_Campaign"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new campaign",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Create a new campaign",
                "parameters": [
                    {
                        "description": "The campaign request",
                        "name": "campaignRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.CampaignCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Campaign"
                        }
                    }
                }
            }
        },
        "/evaluation/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get all evaluations",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Evaluation"
                ],
                "summary": "List all evaluations",
                "parameters": [
                    {
                        "type": "string",
                        "name": "campaignId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "juryId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "next",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "prev",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "roundId",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "submissionId",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "ranking",
                            "score",
                            "binary"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "EvaluationTypeRanking",
                            "EvaluationTypeScore",
                            "EvaluationTypeBinary"
                        ],
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "userId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.ResponseList-database_Evaluation"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Bulk evaluate",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Evaluation"
                ],
                "summary": "Bulk evaluate",
                "parameters": [
                    {
                        "description": "The evaluation request",
                        "name": "evaluationRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/services.EvaluationRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.ResponseList-database_Evaluation"
                        }
                    }
                }
            }
        },
        "/evaluation/{evaluationId}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an evaluation",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Evaluation"
                ],
                "summary": "Update an evaluation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The evaluation ID",
                        "name": "evaluationId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The evaluation request",
                        "name": "evaluationRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.EvaluationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.ResponseSingle-database_Evaluation"
                        }
                    }
                }
            }
        },
        "/round/": {
            "get": {
                "description": "get all rounds",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Round"
                ],
                "summary": "List all rounds",
                "parameters": [
                    {
                        "type": "string",
                        "name": "campaignId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "next",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "prev",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "PENDING",
                            "IMPORTING",
                            "DISTRIBUTING",
                            "EVALUATING",
                            "REJECTED",
                            "CANCELLED",
                            "PAUSED",
                            "SCHEDULED",
                            "ACTIVE",
                            "COMPLETED"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "RoundStatusPending",
                            "RoundStatusImporting",
                            "RoundStatusDistributing",
                            "RoundStatusEvaluating",
                            "RoundStatusRejected",
                            "RoundStatusCancelled",
                            "RoundStatusPaused",
                            "RoundStatusScheduled",
                            "RoundStatusActive",
                            "RoundStatusCompleted"
                        ],
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.ResponseList-database_Round"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new round for a campaign",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Round"
                ],
                "summary": "Create a new round",
                "parameters": [
                    {
                        "description": "The round request",
                        "name": "roundRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.RoundRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.ResponseSingle-database_Round"
                        }
                    }
                }
            }
        },
        "/round/distribute/{roundId}": {
            "post": {
                "description": "Distribute evaluations to juries",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Round"
                ],
                "summary": "Distribute evaluations to juries",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The round ID",
                        "name": "roundId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The distribution request",
                        "name": "DistributionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.DistributionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.ResponseSingle-database_Task"
                        }
                    }
                }
            }
        },
        "/round/distribute/{roundId}/simulate": {
            "post": {
                "description": "Simulate distributing evaluations to juries",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Round"
                ],
                "summary": "Simulate distributing evaluations to juries",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The round ID",
                        "name": "roundId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The distribution request",
                        "name": "DistributionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.DistributionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.ResponseSingle-database_Task"
                        }
                    }
                }
            }
        },
        "/round/import/{roundId}/commons": {
            "post": {
                "description": "The user would provide a round ID and a list of commons categories and the system would import images from those categories",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Round"
                ],
                "summary": "Import images from commons",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The round ID",
                        "name": "roundId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The import from commons request",
                        "name": "ImportFromCommons",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.ImportFromCommonsPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.ResponseSingle-database_Task"
                        }
                    }
                }
            }
        },
        "/round/{roundId}": {
            "post": {
                "description": "Update the details of a round",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Round"
                ],
                "summary": "Update the details of a round",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The round ID",
                        "name": "roundId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The round request",
                        "name": "roundRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.RoundRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.ResponseSingle-database_Round"
                        }
                    }
                }
            }
        },
        "/submission/": {
            "get": {
                "description": "get all submissions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Submission"
                ],
                "summary": "List all submissions",
                "parameters": [
                    {
                        "type": "string",
                        "name": "campaignId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "next",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "participantId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "prev",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "roundId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.ResponseList-database_Submission"
                        }
                    }
                }
            }
        },
        "/task/{taskId}": {
            "get": {
                "description": "The task represents a background job that can be run by the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "Get a task by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The task ID",
                        "name": "taskId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.ResponseSingle-services_TaskResponse"
                        }
                    }
                }
            }
        },
        "/task/{taskId}/stream": {
            "get": {
                "description": "The task represents a background job that can be run by the system. This endpoint streams the response",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "Get a task by ID but stream the response",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The task ID",
                        "name": "taskId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "consts.Language": {
            "type": "string",
            "enum": [
                "am",
                "ar",
                "as",
                "af",
                "bn",
                "zh",
                "da",
                "nl",
                "en",
                "fi",
                "fr",
                "de",
                "el",
                "gu",
                "ha",
                "hi",
                "ig",
                "it",
                "ja",
                "kn",
                "ko",
                "ml",
                "mr",
                "ne",
                "no",
                "or",
                "om",
                "fa",
                "pt",
                "pa",
                "ru",
                "sa",
                "st",
                "sn",
                "sd",
                "so",
                "es",
                "sw",
                "sv",
                "ta",
                "te",
                "ts",
                "tn",
                "tr",
                "ur",
                "-",
                "ve",
                "xh",
                "yo",
                "zu"
            ],
            "x-enum-varnames": [
                "Amharic",
                "Arabic",
                "Assamese",
                "Afrikaans",
                "Bangla",
                "Chinese",
                "Danish",
                "Dutch",
                "English",
                "Finnish",
                "French",
                "German",
                "Greek",
                "Gujarati",
                "Hausa",
                "Hindi",
                "Igbo",
                "Italian",
                "Japanese",
                "Kannada",
                "Korean",
                "Malayalam",
                "Marathi",
                "Nepali",
                "Norwegian",
                "Odia",
                "Oromo",
                "Persian",
                "Portuguese",
                "Punjabi",
                "Russian",
                "Sanskrit",
                "Sesotho",
                "Shona",
                "Sindhi",
                "Somali",
                "Spanish",
                "Swahili",
                "Swedish",
                "Tamil",
                "Telugu",
                "Tsonga",
                "Tswana",
                "Turkish",
                "Urdu",
                "Undefined",
                "Venda",
                "Xhosa",
                "Yoruba",
                "Zulu"
            ]
        },
        "database.Campaign": {
            "type": "object",
            "properties": {
                "campaignId": {
                    "type": "string"
                },
                "createdAt": {
                    "description": "read only",
                    "type": "string"
                },
                "createdById": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "language": {
                    "$ref": "#/definitions/consts.Language"
                },
                "name": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Role"
                    }
                },
                "rules": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            }
        },
        "database.Evaluation": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "distributionTaskId": {
                    "type": "string"
                },
                "evaluatedAt": {
                    "type": "string"
                },
                "evaluationId": {
                    "type": "string"
                },
                "judgeId": {
                    "type": "string"
                },
                "participantId": {
                    "type": "string"
                },
                "score": {
                    "description": "Applicable if the evaluation type is score, it would be between 0-100",
                    "type": "integer"
                },
                "serial": {
                    "type": "integer"
                },
                "submissionId": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/database.EvaluationType"
                },
                "updatedAt": {
                    "type": "string"
                },
                "votePassed": {
                    "description": "Applicable if the evaluation type is binary, it would be true or false",
                    "type": "boolean"
                },
                "votePosition": {
                    "description": "Applicable if the evaluation type is binary, it would be 0 to Number of submissions in this round\nThe pair (JudgeID, VotePosition) should be unique (i.e. a judge can't vote for the same position twice)",
                    "type": "integer"
                }
            }
        },
        "database.EvaluationType": {
            "type": "string",
            "enum": [
                "ranking",
                "score",
                "binary"
            ],
            "x-enum-varnames": [
                "EvaluationTypeRanking",
                "EvaluationTypeScore",
                "EvaluationTypeBinary"
            ]
        },
        "database.MediaType": {
            "type": "string",
            "enum": [
                "ARTICLE",
                "BITMAP",
                "AUDIO",
                "VIDEO",
                "PDF"
            ],
            "x-enum-varnames": [
                "MediaTypeArticle",
                "MediaTypeImage",
                "MediaTypeAudio",
                "MediaTypeVideo",
                "MediaTypePDF"
            ]
        },
        "database.Role": {
            "type": "object",
            "properties": {
                "campaignId": {
                    "type": "string"
                },
                "isAllowed": {
                    "type": "boolean"
                },
                "roleId": {
                    "type": "string"
                },
                "roundId": {
                    "type": "string"
                },
                "totalAssigned": {
                    "type": "integer"
                },
                "totalEvaluated": {
                    "type": "integer"
                },
                "totalScore": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/database.RoleType"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "database.RoleType": {
            "type": "string",
            "enum": [
                "jury",
                "admin",
                "participant",
                "coordinator",
                "organizer"
            ],
            "x-enum-varnames": [
                "RoleTypeJury",
                "RoleTypeAdmin",
                "RoleTypeParticipant",
                "RoleTypeCoordinator",
                "RoleTypeOrganizer"
            ]
        },
        "database.Round": {
            "type": "object",
            "properties": {
                "allowCreations": {
                    "type": "boolean"
                },
                "allowExpansions": {
                    "type": "boolean"
                },
                "allowJuryToParticipate": {
                    "type": "boolean"
                },
                "allowMultipleJudgement": {
                    "type": "boolean"
                },
                "allowedMediaTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.MediaType"
                    }
                },
                "blacklist": {
                    "type": "string"
                },
                "campaignId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdById": {
                    "type": "string"
                },
                "dependsOnRoundId": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "isOpen": {
                    "type": "boolean"
                },
                "isPublic": {
                    "type": "boolean"
                },
                "latestTaskId": {
                    "type": "string"
                },
                "maximumSubmissionOfSameArticle": {
                    "type": "integer"
                },
                "minimumAddedBytes": {
                    "type": "integer"
                },
                "minimumAddedWords": {
                    "type": "integer"
                },
                "minimumDurationMilliseconds": {
                    "type": "integer"
                },
                "minimumHeight": {
                    "type": "integer"
                },
                "minimumResolution": {
                    "type": "integer"
                },
                "minimumTotalBytes": {
                    "type": "integer"
                },
                "minimumTotalWords": {
                    "type": "integer"
                },
                "minimumWidth": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Role"
                    }
                },
                "roundId": {
                    "type": "string"
                },
                "secretBallot": {
                    "type": "boolean"
                },
                "serial": {
                    "type": "integer"
                },
                "startDate": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/database.RoundStatus"
                },
                "totalSubmissions": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/database.EvaluationType"
                }
            }
        },
        "database.RoundStatus": {
            "type": "string",
            "enum": [
                "PENDING",
                "IMPORTING",
                "DISTRIBUTING",
                "EVALUATING",
                "REJECTED",
                "CANCELLED",
                "PAUSED",
                "SCHEDULED",
                "ACTIVE",
                "COMPLETED"
            ],
            "x-enum-varnames": [
                "RoundStatusPending",
                "RoundStatusImporting",
                "RoundStatusDistributing",
                "RoundStatusEvaluating",
                "RoundStatusRejected",
                "RoundStatusCancelled",
                "RoundStatusPaused",
                "RoundStatusScheduled",
                "RoundStatusActive",
                "RoundStatusCompleted"
            ]
        },
        "database.Submission": {
            "type": "object",
            "properties": {
                "author": {
                    "description": "The Actual Author in the Wikimedia",
                    "type": "string"
                },
                "bitrate": {
                    "description": "in kbps",
                    "type": "integer"
                },
                "campaignId": {
                    "type": "string"
                },
                "createdAtServer": {
                    "description": "Campaign          *Campaign  `json:\"-\" gorm:\"foreignKey:CampaignID\"`",
                    "type": "string"
                },
                "creditHTML": {
                    "type": "string"
                },
                "currentRoundId": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "description": "in milliseconds",
                    "type": "integer"
                },
                "height": {
                    "type": "integer"
                },
                "license": {
                    "type": "string"
                },
                "mediatype": {
                    "$ref": "#/definitions/database.MediaType"
                },
                "metadata": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "pageid": {
                    "type": "string"
                },
                "participantId": {
                    "type": "string"
                },
                "size": {
                    "description": "in bytes",
                    "type": "integer"
                },
                "submittedAt": {
                    "type": "string"
                },
                "submittedById": {
                    "description": "The User who submitted the article on behalf of the participant",
                    "type": "string"
                },
                "thumbheight": {
                    "type": "integer"
                },
                "thumburl": {
                    "type": "string"
                },
                "thumbwidth": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "width": {
                    "type": "integer"
                }
            }
        },
        "database.Task": {
            "type": "object",
            "properties": {
                "campaignId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdById": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "failedCount": {
                    "type": "integer"
                },
                "failedIds": {
                    "type": "object"
                },
                "remainingCount": {
                    "type": "integer"
                },
                "roundId": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/database.TaskStatus"
                },
                "successCount": {
                    "type": "integer"
                },
                "taskId": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/database.TaskType"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "database.TaskStatus": {
            "type": "string",
            "enum": [
                "pending",
                "running",
                "success",
                "failed"
            ],
            "x-enum-varnames": [
                "TaskStatusPending",
                "TaskStatusRunning",
                "TaskStatusSuccess",
                "TaskStatusFailed"
            ]
        },
        "database.TaskType": {
            "type": "string",
            "enum": [
                "import.commons",
                "distribute.evaluations"
            ],
            "x-enum-varnames": [
                "TaskTypeImportFromCommons",
                "TaskTypeDistributeEvaluations"
            ]
        },
        "routes.ResponseList-database_Campaign": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Campaign"
                    }
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            }
        },
        "routes.ResponseList-database_Evaluation": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Evaluation"
                    }
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            }
        },
        "routes.ResponseList-database_Round": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Round"
                    }
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            }
        },
        "routes.ResponseList-database_Submission": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Submission"
                    }
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            }
        },
        "routes.ResponseSingle-database_Evaluation": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/database.Evaluation"
                }
            }
        },
        "routes.ResponseSingle-database_Round": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/database.Round"
                }
            }
        },
        "routes.ResponseSingle-database_Task": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/database.Task"
                }
            }
        },
        "routes.ResponseSingle-services_TaskResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/services.TaskResponse"
                }
            }
        },
        "services.CampaignCreateRequest": {
            "type": "object",
            "properties": {
                "coordinators": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "language": {
                    "$ref": "#/definitions/consts.Language"
                },
                "name": {
                    "type": "string"
                },
                "organizers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Role"
                    }
                },
                "rules": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            }
        },
        "services.DistributionRequest": {
            "type": "object",
            "properties": {
                "juries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "services.EvaluationRequest": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "evaluationId": {
                    "type": "string"
                },
                "votePassed": {
                    "type": "boolean"
                },
                "votePosition": {
                    "type": "integer"
                },
                "voteScore": {
                    "type": "integer"
                }
            }
        },
        "services.ImportFromCommonsPayload": {
            "type": "object",
            "properties": {
                "categories": {
                    "description": "Categories from which images will be fetched",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "services.RoundRequest": {
            "type": "object",
            "properties": {
                "allowCreations": {
                    "type": "boolean"
                },
                "allowExpansions": {
                    "type": "boolean"
                },
                "allowJuryToParticipate": {
                    "type": "boolean"
                },
                "allowMultipleJudgement": {
                    "type": "boolean"
                },
                "allowedMediaTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.MediaType"
                    }
                },
                "blacklist": {
                    "type": "string"
                },
                "campaignId": {
                    "type": "string"
                },
                "dependsOnRoundId": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "isOpen": {
                    "type": "boolean"
                },
                "isPublic": {
                    "type": "boolean"
                },
                "jury": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "maximumSubmissionOfSameArticle": {
                    "type": "integer"
                },
                "minimumAddedBytes": {
                    "type": "integer"
                },
                "minimumAddedWords": {
                    "type": "integer"
                },
                "minimumDurationMilliseconds": {
                    "type": "integer"
                },
                "minimumHeight": {
                    "type": "integer"
                },
                "minimumResolution": {
                    "type": "integer"
                },
                "minimumTotalBytes": {
                    "type": "integer"
                },
                "minimumTotalWords": {
                    "type": "integer"
                },
                "minimumWidth": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "secretBallot": {
                    "type": "boolean"
                },
                "serial": {
                    "type": "integer"
                },
                "startDate": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/database.EvaluationType"
                }
            }
        },
        "services.TaskResponse": {
            "type": "object",
            "properties": {
                "campaignId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdById": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "failedCount": {
                    "type": "integer"
                },
                "failedIds": {
                    "type": "object"
                },
                "remainingCount": {
                    "type": "integer"
                },
                "roundId": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/database.TaskStatus"
                },
                "successCount": {
                    "type": "integer"
                },
                "taskId": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/database.TaskType"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        }
    }
}