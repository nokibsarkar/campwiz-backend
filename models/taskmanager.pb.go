// Code generated by protoc-gen-go. DO NOT EDIT.
// source: models/taskmanager.proto

package models

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ImportFromCommonsCategoryRequest struct {
	CommonsCategory      []string `protobuf:"bytes,1,rep,name=commons_category,json=commonsCategory,proto3" json:"commons_category,omitempty"`
	RoundId              string   `protobuf:"bytes,2,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"`
	TaskId               string   `protobuf:"bytes,3,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportFromCommonsCategoryRequest) Reset()         { *m = ImportFromCommonsCategoryRequest{} }
func (m *ImportFromCommonsCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*ImportFromCommonsCategoryRequest) ProtoMessage()    {}
func (*ImportFromCommonsCategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_79d916c8da5836c2, []int{0}
}

func (m *ImportFromCommonsCategoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportFromCommonsCategoryRequest.Unmarshal(m, b)
}
func (m *ImportFromCommonsCategoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportFromCommonsCategoryRequest.Marshal(b, m, deterministic)
}
func (m *ImportFromCommonsCategoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportFromCommonsCategoryRequest.Merge(m, src)
}
func (m *ImportFromCommonsCategoryRequest) XXX_Size() int {
	return xxx_messageInfo_ImportFromCommonsCategoryRequest.Size(m)
}
func (m *ImportFromCommonsCategoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportFromCommonsCategoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImportFromCommonsCategoryRequest proto.InternalMessageInfo

func (m *ImportFromCommonsCategoryRequest) GetCommonsCategory() []string {
	if m != nil {
		return m.CommonsCategory
	}
	return nil
}

func (m *ImportFromCommonsCategoryRequest) GetRoundId() string {
	if m != nil {
		return m.RoundId
	}
	return ""
}

func (m *ImportFromCommonsCategoryRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type ImportFromPreviousRoundRequest struct {
	RoundId              string    `protobuf:"bytes,1,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"`
	TaskId               string    `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Scores               []float32 `protobuf:"fixed32,3,rep,packed,name=scores,proto3" json:"scores,omitempty"`
	SourceRoundId        string    `protobuf:"bytes,4,opt,name=source_round_id,json=sourceRoundId,proto3" json:"source_round_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ImportFromPreviousRoundRequest) Reset()         { *m = ImportFromPreviousRoundRequest{} }
func (m *ImportFromPreviousRoundRequest) String() string { return proto.CompactTextString(m) }
func (*ImportFromPreviousRoundRequest) ProtoMessage()    {}
func (*ImportFromPreviousRoundRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_79d916c8da5836c2, []int{1}
}

func (m *ImportFromPreviousRoundRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportFromPreviousRoundRequest.Unmarshal(m, b)
}
func (m *ImportFromPreviousRoundRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportFromPreviousRoundRequest.Marshal(b, m, deterministic)
}
func (m *ImportFromPreviousRoundRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportFromPreviousRoundRequest.Merge(m, src)
}
func (m *ImportFromPreviousRoundRequest) XXX_Size() int {
	return xxx_messageInfo_ImportFromPreviousRoundRequest.Size(m)
}
func (m *ImportFromPreviousRoundRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportFromPreviousRoundRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImportFromPreviousRoundRequest proto.InternalMessageInfo

func (m *ImportFromPreviousRoundRequest) GetRoundId() string {
	if m != nil {
		return m.RoundId
	}
	return ""
}

func (m *ImportFromPreviousRoundRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *ImportFromPreviousRoundRequest) GetScores() []float32 {
	if m != nil {
		return m.Scores
	}
	return nil
}

func (m *ImportFromPreviousRoundRequest) GetSourceRoundId() string {
	if m != nil {
		return m.SourceRoundId
	}
	return ""
}

type ImportFromCSVRequest struct {
	FilePath             string   `protobuf:"bytes,1,opt,name=filePath,proto3" json:"filePath,omitempty"`
	SubmissionIdColumn   string   `protobuf:"bytes,2,opt,name=submissionIdColumn,proto3" json:"submissionIdColumn,omitempty"`
	PageIdColumn         string   `protobuf:"bytes,3,opt,name=pageIdColumn,proto3" json:"pageIdColumn,omitempty"`
	FileNameColumn       string   `protobuf:"bytes,4,opt,name=fileNameColumn,proto3" json:"fileNameColumn,omitempty"`
	RoundId              string   `protobuf:"bytes,5,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"`
	TaskId               string   `protobuf:"bytes,6,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportFromCSVRequest) Reset()         { *m = ImportFromCSVRequest{} }
func (m *ImportFromCSVRequest) String() string { return proto.CompactTextString(m) }
func (*ImportFromCSVRequest) ProtoMessage()    {}
func (*ImportFromCSVRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_79d916c8da5836c2, []int{2}
}

func (m *ImportFromCSVRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportFromCSVRequest.Unmarshal(m, b)
}
func (m *ImportFromCSVRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportFromCSVRequest.Marshal(b, m, deterministic)
}
func (m *ImportFromCSVRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportFromCSVRequest.Merge(m, src)
}
func (m *ImportFromCSVRequest) XXX_Size() int {
	return xxx_messageInfo_ImportFromCSVRequest.Size(m)
}
func (m *ImportFromCSVRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportFromCSVRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImportFromCSVRequest proto.InternalMessageInfo

func (m *ImportFromCSVRequest) GetFilePath() string {
	if m != nil {
		return m.FilePath
	}
	return ""
}

func (m *ImportFromCSVRequest) GetSubmissionIdColumn() string {
	if m != nil {
		return m.SubmissionIdColumn
	}
	return ""
}

func (m *ImportFromCSVRequest) GetPageIdColumn() string {
	if m != nil {
		return m.PageIdColumn
	}
	return ""
}

func (m *ImportFromCSVRequest) GetFileNameColumn() string {
	if m != nil {
		return m.FileNameColumn
	}
	return ""
}

func (m *ImportFromCSVRequest) GetRoundId() string {
	if m != nil {
		return m.RoundId
	}
	return ""
}

func (m *ImportFromCSVRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type ImportResponse struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	RoundId              string   `protobuf:"bytes,2,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportResponse) Reset()         { *m = ImportResponse{} }
func (m *ImportResponse) String() string { return proto.CompactTextString(m) }
func (*ImportResponse) ProtoMessage()    {}
func (*ImportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_79d916c8da5836c2, []int{3}
}

func (m *ImportResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportResponse.Unmarshal(m, b)
}
func (m *ImportResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportResponse.Marshal(b, m, deterministic)
}
func (m *ImportResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportResponse.Merge(m, src)
}
func (m *ImportResponse) XXX_Size() int {
	return xxx_messageInfo_ImportResponse.Size(m)
}
func (m *ImportResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImportResponse proto.InternalMessageInfo

func (m *ImportResponse) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *ImportResponse) GetRoundId() string {
	if m != nil {
		return m.RoundId
	}
	return ""
}

type DistributeWithRoundRobinRequest struct {
	RoundId              string   `protobuf:"bytes,1,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"`
	TaskId               string   `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	JuryUsernames        []string `protobuf:"bytes,3,rep,name=jury_usernames,json=juryUsernames,proto3" json:"jury_usernames,omitempty"`
	SourceJuryUsernames  []string `protobuf:"bytes,4,rep,name=source_jury_usernames,json=sourceJuryUsernames,proto3" json:"source_jury_usernames,omitempty"`
	TargetJuryUsernames  []string `protobuf:"bytes,5,rep,name=target_jury_usernames,json=targetJuryUsernames,proto3" json:"target_jury_usernames,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DistributeWithRoundRobinRequest) Reset()         { *m = DistributeWithRoundRobinRequest{} }
func (m *DistributeWithRoundRobinRequest) String() string { return proto.CompactTextString(m) }
func (*DistributeWithRoundRobinRequest) ProtoMessage()    {}
func (*DistributeWithRoundRobinRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_79d916c8da5836c2, []int{4}
}

func (m *DistributeWithRoundRobinRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DistributeWithRoundRobinRequest.Unmarshal(m, b)
}
func (m *DistributeWithRoundRobinRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DistributeWithRoundRobinRequest.Marshal(b, m, deterministic)
}
func (m *DistributeWithRoundRobinRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DistributeWithRoundRobinRequest.Merge(m, src)
}
func (m *DistributeWithRoundRobinRequest) XXX_Size() int {
	return xxx_messageInfo_DistributeWithRoundRobinRequest.Size(m)
}
func (m *DistributeWithRoundRobinRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DistributeWithRoundRobinRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DistributeWithRoundRobinRequest proto.InternalMessageInfo

func (m *DistributeWithRoundRobinRequest) GetRoundId() string {
	if m != nil {
		return m.RoundId
	}
	return ""
}

func (m *DistributeWithRoundRobinRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *DistributeWithRoundRobinRequest) GetJuryUsernames() []string {
	if m != nil {
		return m.JuryUsernames
	}
	return nil
}

func (m *DistributeWithRoundRobinRequest) GetSourceJuryUsernames() []string {
	if m != nil {
		return m.SourceJuryUsernames
	}
	return nil
}

func (m *DistributeWithRoundRobinRequest) GetTargetJuryUsernames() []string {
	if m != nil {
		return m.TargetJuryUsernames
	}
	return nil
}

type DistributeWithRoundRobinResponse struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DistributeWithRoundRobinResponse) Reset()         { *m = DistributeWithRoundRobinResponse{} }
func (m *DistributeWithRoundRobinResponse) String() string { return proto.CompactTextString(m) }
func (*DistributeWithRoundRobinResponse) ProtoMessage()    {}
func (*DistributeWithRoundRobinResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_79d916c8da5836c2, []int{5}
}

func (m *DistributeWithRoundRobinResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DistributeWithRoundRobinResponse.Unmarshal(m, b)
}
func (m *DistributeWithRoundRobinResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DistributeWithRoundRobinResponse.Marshal(b, m, deterministic)
}
func (m *DistributeWithRoundRobinResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DistributeWithRoundRobinResponse.Merge(m, src)
}
func (m *DistributeWithRoundRobinResponse) XXX_Size() int {
	return xxx_messageInfo_DistributeWithRoundRobinResponse.Size(m)
}
func (m *DistributeWithRoundRobinResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DistributeWithRoundRobinResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DistributeWithRoundRobinResponse proto.InternalMessageInfo

func (m *DistributeWithRoundRobinResponse) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type UpdateStatisticsRequest struct {
	SubmissionIds        []string `protobuf:"bytes,1,rep,name=submission_ids,json=submissionIds,proto3" json:"submission_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateStatisticsRequest) Reset()         { *m = UpdateStatisticsRequest{} }
func (m *UpdateStatisticsRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateStatisticsRequest) ProtoMessage()    {}
func (*UpdateStatisticsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_79d916c8da5836c2, []int{6}
}

func (m *UpdateStatisticsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateStatisticsRequest.Unmarshal(m, b)
}
func (m *UpdateStatisticsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateStatisticsRequest.Marshal(b, m, deterministic)
}
func (m *UpdateStatisticsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateStatisticsRequest.Merge(m, src)
}
func (m *UpdateStatisticsRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateStatisticsRequest.Size(m)
}
func (m *UpdateStatisticsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateStatisticsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateStatisticsRequest proto.InternalMessageInfo

func (m *UpdateStatisticsRequest) GetSubmissionIds() []string {
	if m != nil {
		return m.SubmissionIds
	}
	return nil
}

type UpdateStatisticsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateStatisticsResponse) Reset()         { *m = UpdateStatisticsResponse{} }
func (m *UpdateStatisticsResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateStatisticsResponse) ProtoMessage()    {}
func (*UpdateStatisticsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_79d916c8da5836c2, []int{7}
}

func (m *UpdateStatisticsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateStatisticsResponse.Unmarshal(m, b)
}
func (m *UpdateStatisticsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateStatisticsResponse.Marshal(b, m, deterministic)
}
func (m *UpdateStatisticsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateStatisticsResponse.Merge(m, src)
}
func (m *UpdateStatisticsResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateStatisticsResponse.Size(m)
}
func (m *UpdateStatisticsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateStatisticsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateStatisticsResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ImportFromCommonsCategoryRequest)(nil), "models.ImportFromCommonsCategoryRequest")
	proto.RegisterType((*ImportFromPreviousRoundRequest)(nil), "models.ImportFromPreviousRoundRequest")
	proto.RegisterType((*ImportFromCSVRequest)(nil), "models.ImportFromCSVRequest")
	proto.RegisterType((*ImportResponse)(nil), "models.ImportResponse")
	proto.RegisterType((*DistributeWithRoundRobinRequest)(nil), "models.DistributeWithRoundRobinRequest")
	proto.RegisterType((*DistributeWithRoundRobinResponse)(nil), "models.DistributeWithRoundRobinResponse")
	proto.RegisterType((*UpdateStatisticsRequest)(nil), "models.UpdateStatisticsRequest")
	proto.RegisterType((*UpdateStatisticsResponse)(nil), "models.UpdateStatisticsResponse")
}

func init() {
	proto.RegisterFile("models/taskmanager.proto", fileDescriptor_79d916c8da5836c2)
}

var fileDescriptor_79d916c8da5836c2 = []byte{
	// 615 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0xcd, 0x6e, 0xd3, 0x4c,
	0x14, 0x95, 0x93, 0x36, 0x6d, 0xee, 0xf7, 0x25, 0x85, 0x01, 0x5a, 0x37, 0x05, 0x6a, 0x59, 0x6a,
	0x09, 0x9b, 0x54, 0x0a, 0xcb, 0x6e, 0x10, 0x69, 0x91, 0xc2, 0x02, 0x55, 0x2e, 0x05, 0x81, 0x04,
	0x61, 0x62, 0x0f, 0xee, 0xd0, 0xcc, 0x8c, 0x99, 0x9f, 0xa2, 0x76, 0xc7, 0x9a, 0x2d, 0x8f, 0xc7,
	0x0a, 0xf1, 0x20, 0xc8, 0x19, 0xdb, 0x8d, 0xd3, 0x5a, 0x59, 0x20, 0x56, 0xd1, 0xdc, 0x9f, 0x33,
	0x77, 0xce, 0xb9, 0x27, 0x06, 0x97, 0x89, 0x88, 0x4c, 0xd4, 0x9e, 0xc6, 0xea, 0x8c, 0x61, 0x8e,
	0x63, 0x22, 0x7b, 0x89, 0x14, 0x5a, 0xa0, 0x86, 0xcd, 0xf8, 0xdf, 0x1c, 0xf0, 0x86, 0x2c, 0x11,
	0x52, 0x3f, 0x97, 0x82, 0x0d, 0x04, 0x63, 0x82, 0xab, 0x01, 0xd6, 0x24, 0x16, 0xf2, 0x22, 0x20,
	0x5f, 0x0c, 0x51, 0x1a, 0x3d, 0x86, 0x5b, 0xa1, 0xcd, 0x8c, 0xc2, 0x2c, 0xe5, 0x3a, 0x5e, 0xbd,
	0xdb, 0x0c, 0xd6, 0xc2, 0x72, 0x07, 0xda, 0x84, 0x55, 0x29, 0x0c, 0x8f, 0x46, 0x34, 0x72, 0x6b,
	0x9e, 0xd3, 0x6d, 0x06, 0x2b, 0xd3, 0xf3, 0x30, 0x42, 0x1b, 0xb0, 0x92, 0xce, 0x91, 0x66, 0xea,
	0xd3, 0x4c, 0x23, 0x3d, 0x0e, 0x23, 0xff, 0x87, 0x03, 0x0f, 0xaf, 0x66, 0x38, 0x92, 0xe4, 0x9c,
	0x0a, 0xa3, 0x82, 0xb4, 0x2d, 0x9f, 0x60, 0x16, 0xd6, 0xa9, 0x84, 0xad, 0xcd, 0xc2, 0xa2, 0x75,
	0x68, 0xa8, 0x50, 0x48, 0xa2, 0xdc, 0xba, 0x57, 0xef, 0xd6, 0x82, 0xec, 0x84, 0x76, 0x61, 0x4d,
	0x09, 0x23, 0x43, 0x32, 0x2a, 0x20, 0x97, 0xa6, 0x8d, 0x2d, 0x1b, 0x0e, 0x2c, 0xb0, 0xff, 0xcb,
	0x81, 0xbb, 0x33, 0xd4, 0x1c, 0xbf, 0xce, 0x87, 0xe9, 0xc0, 0xea, 0x27, 0x3a, 0x21, 0x47, 0x58,
	0x9f, 0x66, 0xc3, 0x14, 0x67, 0xd4, 0x03, 0xa4, 0xcc, 0x98, 0x51, 0xa5, 0xa8, 0xe0, 0xc3, 0x68,
	0x20, 0x26, 0x86, 0xf1, 0x6c, 0xb0, 0x1b, 0x32, 0xc8, 0x87, 0xff, 0x13, 0x1c, 0x93, 0xa2, 0xd2,
	0x32, 0x53, 0x8a, 0xa1, 0x5d, 0x68, 0xa7, 0xf8, 0x2f, 0x31, 0x23, 0x59, 0x95, 0x9d, 0x77, 0x2e,
	0x5a, 0x22, 0x69, 0xb9, 0x92, 0xa4, 0x46, 0x89, 0xfb, 0x03, 0x68, 0xdb, 0x37, 0x06, 0x44, 0x25,
	0x82, 0x2b, 0x32, 0x5b, 0xea, 0x94, 0xf8, 0xac, 0x96, 0xd6, 0xff, 0xed, 0xc0, 0xf6, 0x01, 0x55,
	0x5a, 0xd2, 0xb1, 0xd1, 0xe4, 0x0d, 0xd5, 0xa7, 0x56, 0x3d, 0x31, 0xa6, 0xfc, 0x6f, 0x24, 0xdc,
	0x81, 0xf6, 0x67, 0x23, 0x2f, 0x46, 0x46, 0x11, 0xc9, 0x31, 0xcb, 0xa4, 0x6c, 0x06, 0xad, 0x34,
	0x7a, 0x92, 0x07, 0x51, 0x1f, 0xee, 0x65, 0x8a, 0xce, 0x55, 0x2f, 0x4d, 0xab, 0xef, 0xd8, 0xe4,
	0x8b, 0xf9, 0x1e, 0x8d, 0x65, 0x4c, 0xf4, 0x7c, 0xcf, 0xb2, 0xed, 0xb1, 0xc9, 0x52, 0x8f, 0xbf,
	0x0f, 0x5e, 0xf5, 0x2b, 0x17, 0xd0, 0xe7, 0x3f, 0x85, 0x8d, 0x93, 0x24, 0xc2, 0x9a, 0x1c, 0x6b,
	0xac, 0xa9, 0xd2, 0x34, 0x54, 0x39, 0x35, 0x3b, 0xd0, 0xbe, 0x5a, 0x8d, 0x11, 0x8d, 0x54, 0xe6,
	0xae, 0xd6, 0xec, 0xc2, 0x28, 0xbf, 0x03, 0xee, 0x75, 0x04, 0x7b, 0x6d, 0xff, 0x7b, 0x0d, 0x56,
	0xad, 0x90, 0x44, 0xa2, 0xf7, 0xb0, 0x59, 0xe9, 0x69, 0xd4, 0xed, 0x59, 0xeb, 0xf7, 0x16, 0xd9,
	0xbe, 0xb3, 0x5e, 0xae, 0x2c, 0x9e, 0xf8, 0x16, 0x36, 0x2a, 0xec, 0x8a, 0x76, 0xaf, 0x83, 0xdf,
	0xe4, 0xe7, 0x4a, 0xe8, 0x43, 0x68, 0x95, 0x2c, 0x87, 0xee, 0xdf, 0x30, 0x6d, 0xe1, 0xc4, 0x2a,
	0x98, 0xfe, 0x4f, 0x07, 0xfe, 0x2b, 0x94, 0x12, 0x12, 0x31, 0x70, 0xab, 0x84, 0x43, 0x8f, 0x72,
	0x8c, 0x05, 0x0b, 0xdc, 0xe9, 0x2e, 0x2e, 0xcc, 0x5e, 0xf1, 0x01, 0x9a, 0x01, 0xe6, 0x91, 0x60,
	0xf4, 0x92, 0xfc, 0x03, 0xfc, 0xbe, 0x81, 0xdb, 0x57, 0x2b, 0x60, 0x57, 0x42, 0xa2, 0x8f, 0xb0,
	0xf5, 0x4a, 0xd2, 0x38, 0x26, 0xf2, 0xf0, 0x1c, 0x4f, 0x0c, 0xd6, 0x54, 0xf0, 0xe3, 0xf4, 0x1f,
	0x6f, 0x20, 0x0c, 0xd7, 0x68, 0x3b, 0x47, 0xaf, 0x58, 0xc2, 0x8e, 0x57, 0x5d, 0x60, 0xaf, 0x7d,
	0xf6, 0xe0, 0xdd, 0x16, 0x17, 0x67, 0x74, 0xbc, 0x17, 0x62, 0x96, 0x7c, 0xa5, 0x97, 0x7b, 0xb6,
	0x61, 0xdf, 0xfe, 0x8c, 0x1b, 0xd3, 0x2f, 0xcb, 0x93, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x3f,
	0xe7, 0xbc, 0x76, 0x75, 0x06, 0x00, 0x00,
}
